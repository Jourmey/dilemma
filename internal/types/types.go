// Code generated by goctl. DO NOT EDIT.
package types

type ResultMsg struct {
	Code   int         `json:"code"`
	Result interface{} `json:"result"`
	Msg    string      `json:"msg"`
}

func NewResultMsg(result interface{}, err error) *ResultMsg {
	r := new(ResultMsg)
	if err != nil {
		r.Code = 1
		r.Result = nil
		r.Msg = err.Error()
	} else {
		r.Code = 0
		r.Result = result
		r.Msg = "success"
	}
	return r
}

type ID struct {
	Id int `form:"id"`
}

type GetReq struct {
	Id       int `form:"id,optional"`
	PageNo   int `form:"page_no,optional"`
	PageSize int `form:"page_size,optional"`
}

type TaskInfoGetReq struct {
	TaskId int `form:"task_id,optional"`
	GetReq
}

type TaskCreatReq struct {
	Url string `json:"url"`
	Tag []int  `json:"tag"`
}

type VideoDownloadReq struct {
	TaskInfoIds []int `json:"task_info_id"`
}

type HomepageInfo struct {
	UserNumber     int `json:"user_number"`
	TaskNumber     int `json:"task_number"`
	TaskInfoNumber int `json:"task_info_number"`
	VideoNumber    int `json:"video_number"`
}
